name: Update Library and create manifest

on:
  push:
    paths:
      - "Ben-YehudaToOtzaria/ספרים/אוצריא/**"
      - "DictaToOtzaria/ספרים/ערוך/אוצריא/**"
      - "OnYourWayToOtzaria/ספרים/אוצריא/**"
      - "OraytaToOtzaria/ספרים/אוצריא/**"
      - "tashmaToOtzaria/ספרים/אוצריא/**"
      - "sefariaToOtzaria/sefaria_export/ספרים/אוצריא/**"
      - "sefariaToOtzaria/sefaria_api/ספרים/אוצריא/**"
      - "MoreBooks/ספרים/אוצריא/**"
      - "wiki_jewish_books/ספרים/אוצריא/**"
      - "Ben-YehudaToOtzaria/ספרים/links/**"
      - "DictaToOtzaria/ספרים/ערוך/links/**"
      - "OnYourWayToOtzaria/ספרים/links/**"
      - "OraytaToOtzaria/ספרים/links/**"
      - "tashmaToOtzaria/ספרים/links/**"
      - "sefariaToOtzaria/sefaria_export/ספרים/links/**"
      - "sefariaToOtzaria/sefaria_api/ספרים/links/**"
      - "MoreBooks/ספרים/links/**"
      - "wiki_jewish_books/ספרים/links/**"
  workflow_dispatch:
permissions:
  contents: write


# שמירת הטריגר הישן כתגובה כדי שלא יפעל בפועל
# on:
#   schedule:
#     - cron: '0 6 * * 5'  # מפעיל את ה-Workflow כל יום שישי בשעה 8:00 שעון ישראל (3:00 UTC)
#
#   workflow_dispatch:  # מאפשר הפעלה ידנית

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]' && github.actor != 'github-actions'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.14'

      - name: Install dependencies
        run: |
          pip install bs4 requests pyluach

      - name: update in mitmachim
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          TOKEN_YEMOT: ${{ secrets.TOKEN_YEMOT }}
          GOOGLE_CHAT_URL: ${{ secrets.GOOGLE_CHAT_URL }}
        run: |
          python send_update/main.py
          
      - name: Sync files and folders
        run: |
          python sync_and_merge_folders.py

      - name: Generate New Files Manifest (New format - with full paths from sources)
        run: |          
          echo "{" > files_manifest.json
          
          # Add metadata.json (root file)
          if [ -f "./metadata.json" ]; then
            hash=$(sha256sum "./metadata.json" | cut -d" " -f1)
            echo "\"metadata.json\": {\"hash\": \"$hash\"}," >> files_manifest.json
          fi
          
          # Find all files in source directories (אוצריא files from all sources)
          find . \( \
            -path "./Ben-YehudaToOtzaria/ספרים/אוצריא/*" -o \
            -path "./DictaToOtzaria/ספרים/ערוך/אוצריא/*" -o \
            -path "./OnYourWayToOtzaria/ספרים/אוצריא/*" -o \
            -path "./OraytaToOtzaria/ספרים/אוצריא/*" -o \
            -path "./tashmaToOtzaria/ספרים/אוצריא/*" -o \
            -path "./sefariaToOtzaria/sefaria_export/ספרים/אוצריא/*" -o \
            -path "./sefariaToOtzaria/sefaria_api/ספרים/אוצריא/*" -o \
            -path "./MoreBooks/ספרים/אוצריא/*" -o \
            -path "./wiki_jewish_books/ספרים/אוצריא/*" \
          \) -type f \
          ! -path "./.git/*" \
          ! -path "./.github/*" \
          2>/dev/null | while read -r file; do
            path="${file#./}"
            hash=$(sha256sum "$file" | cut -d" " -f1)
            echo "\"$path\": {\"hash\": \"$hash\"},"
          done >> files_manifest.json
          
          # Find all link files from all sources
          find . \( \
            -path "./Ben-YehudaToOtzaria/links/*" -o \
            -path "./DictaToOtzaria/links/*" -o \
            -path "./OnYourWayToOtzaria/links/*" -o \
            -path "./OraytaToOtzaria/links/*" -o \
            -path "./tashmaToOtzaria/links/*" -o \
            -path "./sefariaToOtzaria/sefaria_export/links/*" -o \
            -path "./sefariaToOtzaria/sefaria_api/links/*" -o \
            -path "./MoreBooks/links/*" -o \
            -path "./wiki_jewish_books/links/*" \
          \) -type f \
          ! -path "./.git/*" \
          ! -path "./.github/*" \
          2>/dev/null | while read -r file; do
            path="${file#./}"
            hash=$(sha256sum "$file" | cut -d" " -f1)
            echo "\"$path\": {\"hash\": \"$hash\"},"
          done >> files_manifest.json
          
          # Remove the trailing comma from the last entry and close the JSON
          sed -i '$ s/,$//' files_manifest.json
          echo "}" >> files_manifest.json

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update files manifest and sync folders"
          default_author: github_actions

      - name: Merge files for ZIP archive
        run: |
          # Create temporary merged directories for ZIP
          mkdir -p temp_zip/אוצריא
          mkdir -p temp_zip/links
          
          echo "Merging book files into אוצריא directory..."
          # Copy all book files from source directories to merged אוצריא
          [ -d "Ben-YehudaToOtzaria/ספרים/אוצריא" ] && cp -r "Ben-YehudaToOtzaria/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "DictaToOtzaria/ספרים/ערוך/אוצריא" ] && cp -r "DictaToOtzaria/ספרים/ערוך/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "OnYourWayToOtzaria/ספרים/אוצריא" ] && cp -r "OnYourWayToOtzaria/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "OraytaToOtzaria/ספרים/אוצריא" ] && cp -r "OraytaToOtzaria/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "tashmaToOtzaria/ספרים/אוצריא" ] && cp -r "tashmaToOtzaria/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "sefariaToOtzaria/sefaria_export/ספרים/אוצריא" ] && cp -r "sefariaToOtzaria/sefaria_export/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "sefariaToOtzaria/sefaria_api/ספרים/אוצריא" ] && cp -r "sefariaToOtzaria/sefaria_api/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "MoreBooks/ספרים/אוצריא" ] && cp -r "MoreBooks/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          [ -d "wiki_jewish_books/ספרים/אוצריא" ] && cp -r "wiki_jewish_books/ספרים/אוצריא/." temp_zip/אוצריא/ 2>/dev/null || true
          
          echo "Merging link files into links directory..."
          # Copy all link files from source directories to merged links
          [ -d "Ben-YehudaToOtzaria/links" ] && cp -r "Ben-YehudaToOtzaria/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "DictaToOtzaria/links" ] && cp -r "DictaToOtzaria/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "OnYourWayToOtzaria/links" ] && cp -r "OnYourWayToOtzaria/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "OraytaToOtzaria/links" ] && cp -r "OraytaToOtzaria/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "tashmaToOtzaria/links" ] && cp -r "tashmaToOtzaria/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "sefariaToOtzaria/sefaria_export/links" ] && cp -r "sefariaToOtzaria/sefaria_export/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "sefariaToOtzaria/sefaria_api/links" ] && cp -r "sefariaToOtzaria/sefaria_api/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "MoreBooks/links" ] && cp -r "MoreBooks/links/." temp_zip/links/ 2>/dev/null || true
          [ -d "wiki_jewish_books/links" ] && cp -r "wiki_jewish_books/links/." temp_zip/links/ 2>/dev/null || true
          
          echo "Files merged successfully!"

      - name: Create Release Archive
        run: |
          # Create ZIP with merged structure
          cd temp_zip
          zip -qr ../otzaria_latest.zip אוצריא links
          cd ..
          
          # Add manifest files to ZIP
          zip -q otzaria_latest.zip files_manifest.json metadata.json || true
          
          echo "Archive created successfully with merged directory structure"

      - name: Delete existing 'latest' release and tag
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete latest --yes || true
          git push --delete origin latest || true
      
      - name: Create and push new tag  # יצירת תגית חדשה
        run: |
          git tag -f latest
          git push origin latest --force

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create latest \
            --title "Latest Otzaria Files" \
            --notes "Latest version of Otzaria files" \
            otzaria_latest.zip
